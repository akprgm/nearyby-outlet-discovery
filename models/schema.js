var mongoose = require('mongoose');
var Schema = mongoose.Schema;
var outletGallery = new Schema({
    image_id: {type:Schema.Types.ObjectId, required:true},
    image: {type:String, required:true} 
});
var outletTiming = new Schema({
    sunday: {type:String, required:true},
    monday: {type:String, required:true},
    tuesday: {type:String, required:true},
    wednesday: {type:String, required:true},
    thursday: {type:String, required:true},
    friday: {type:String, required:true},
    saturday: {type:String, required:true}
});
var review = new Schema({
    _id: {type:Schema.Types.ObjectId, required:true, unique:true},
    review: {type:String, required:true},
    images: [String],
    comments: [String],
    likes: [String],
    date: {type:Number,required:true}
});
module.exports = {
    user : new Schema({
        name: {type:String, required:true},
        email: {type:String, lowercase:true},
        gender: {type:String, enum:["m","f",""], default:"f"},
        access_token: {type:String, required:true, unique:true},
        refresh_token: {type:String, required:true, unique:true},
        city : {type:String, default:""},
        news_letter: {type:Boolean, default:false},
        status : {type:Boolean, default:false},
        last_location: {type:String, default:""},
        joining_date: {type:Number, required:true},
        last_active: {type:Number, required:true},
        auth_type: {type:String, enum:["faagio","google","facebook"]},
        password: {type:String, default:""},
        profile_status: {type:String, default:true},
        social_id :{type:String, default:""},
        phone: [String]
    }),
    outlet   : new Schema({
        _id: {type:Schema.Types.ObjectId, required:true, unique:true},
        email: {type:String, required:true, unique:true},
        password: {type:String, required:true},
        name: {type:String, required:true},
        address: {type:String, required:true},
        locality: {type:String, required:true},
        zones: {type:String, required:true},
        region: {type:String, required:true},
        near_by: {type:String, required:true},
        page_url: {type:String, required:true},
        cost_rate: {type:Number, required:true},
        cover_image: {type:String, required:true},
        outlet_owner: {type:String, required:true},
        outlet_time: {type:String},
        website: {type:String, required:true},
        phone_no: {type:String, required:true},
        video: {type:String, required:true},
        did_you_know: {type:String, required:true},
        parking: {type:String, required:true},
        authorised_dealer: {type:String, required:true},
        brand_desc: {type:String, required:true},
        brands: {type:String, required:true},
        category: {type:String, required:true},
        user_name: {type:String, required:true},
        latitude: {type:Number, required:true},
        longitude: {type:Number, required:true},
        gallery: [outletGallery],
        rating: {type:String, required:true},
        voters: {type:String, required:true},
        contacts: [String],
        outlet_type: [{type:String, required:true}],
        timing: outletTiming,
        outlet_accept: [String],
        description: {type:String, required:true},
        tags: [String],
        gender: [String],
        exchange: [String],
        labels: [String],
    }),
    rating : new Schema({
        _id: {type:Schema.Types.ObjectId, required:true, unique:true},
        outlet_id: {type:Schema.Types.ObjectId, required:true},
        user_id: {type:Schema.Types.ObjectId, required:true},
        star: Number,
        reviews: [review],
        category: {type:String, required:true, enum:["book","cloth","consumer","watch"]},
        date: {type:Number, required:true},
    }),
    bookMark : new Schema({
        _id: {type:Schema.Types.ObjectId, required:true, unique:true},
        outlet_id: {type:Schema.Types.ObjectId, required:true},
        user_id: {type:Schema.Types.ObjectId, required:true},
        category: {type:String, required:true, enum:["book","cloth","consumer","watch"]},
        date: {type:Number, required:true},
    }),
    checkIn : new Schema({
        _id: {type:Schema.Types.ObjectId, required:true, unique:true},
        outlet_id: {type:Schema.Types.ObjectId, required:true},
        user_id: {type:Schema.Types.ObjectId, required:true},
        category: {type:String, required:true, enum:["book","cloth","consumer","watch"]},
        public: {type:Boolean, required:true, default:true},
        date: {type:Number, required:true},
    }),
    images : new Schema({
        _id: {type:Schema.Types.ObjectId, required:true, unique:true},
        outlet_id: {type:Schema.Types.ObjectId, required:true},
        user_id: {type:Schema.Types.ObjectId, required:true},
        category: {type:String, required:true, enum:["book","cloth","consumer","watch"]},
        image: {type:String, required:true},
        uploaded_by: {type:String, required:true, enum:["admin","outlet","user"]},
    }),
    reviewComments : new Schema({
        _id: {type:Schema.Types.ObjectId, required:true, unique:true},
        review_id: {type:Schema.Types.ObjectId, required:true},
        user_id: {type:Schema.Types.ObjectId, required:true},
        comment: {type:String, required:true},
        date: {type:Number, required:true},
    }),
    reviewLikes : new Schema({
        _id: {type:Schema.Types.ObjectId, required:true, unique:true},
        review_id: {type:Schema.Types.ObjectId, required:true},
        user_id: {type:Schema.Types.ObjectId, required:true},
        like_dislike: {type:Boolean, required:true, default:true},
        date: {type:Number, required:true},
    }),
    imageComments : new Schema({
        _id: {type:Schema.Types.ObjectId, required:true, unique:true},
        image_id: {type:Schema.Types.ObjectId, required:true},
        user_id: {type:Schema.Types.ObjectId, required:true},
        comment: {type:String, required:true},
        image_type: {type:String, required:true},
        date: {type:Number, required:true},
    }),
    imageLikes : new Schema({
        _id: {type:Schema.Types.ObjectId, required:true, unique:true},
        image_id: {type:Schema.Types.ObjectId, required:true},
        user_id: {type:Schema.Types.ObjectId, required:true},
        image_type: {type:String, required:true},
        date: {type:Number, required:true},
    }),
    errorReport : new Schema({
        _id: {type:Schema.Types.ObjectId, required:true, unique:true},
        outlet_id: {type:Schema.Types.ObjectId, required:true},
        user_id: {type:Schema.Types.ObjectId, required:true},
        category: {type:String, required:true, enum:["book","cloth","consumer","watch"]},
        header: {type:Boolean, required:true, default:false},
        about: {type:Boolean, required:true, default:false},
        stm: {type:Boolean, required:true, default:false},
        timing: {type:Boolean, required:true, default:false},
        labels: {type:Boolean, required:true, default:false},
        reviews: {type:Boolean, required:true, default:false},
        tags: {type:Boolean, required:true, default:false},
        date: {type:Number, required:true}
    }),
    shutdownReport : new Schema({
        _id: {type:Schema.Types.ObjectId, required:true, unique:true},
        outlet_id: {type:Schema.Types.ObjectId, required:true},
        user_id: {type:Schema.Types.ObjectId, required:true},
        category: {type:String, required:true, enum:["book","cloth","consumer","watch"]},
        date: {type:Number, required:true}        
    })
}